// Code generated by go-swagger; DO NOT EDIT.

package idea_post

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"devsmake/models"
)

// GetIdeaUUIDOKCode is the HTTP code returned for type GetIdeaUUIDOK
const GetIdeaUUIDOKCode int = 200

/*GetIdeaUUIDOK the idea post fetched

swagger:response getIdeaUuidOK
*/
type GetIdeaUUIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.Idea `json:"body,omitempty"`
}

// NewGetIdeaUUIDOK creates GetIdeaUUIDOK with default headers values
func NewGetIdeaUUIDOK() *GetIdeaUUIDOK {

	return &GetIdeaUUIDOK{}
}

// WithPayload adds the payload to the get idea Uuid o k response
func (o *GetIdeaUUIDOK) WithPayload(payload *models.Idea) *GetIdeaUUIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get idea Uuid o k response
func (o *GetIdeaUUIDOK) SetPayload(payload *models.Idea) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetIdeaUUIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetIdeaUUIDDefault error

swagger:response getIdeaUuidDefault
*/
type GetIdeaUUIDDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetIdeaUUIDDefault creates GetIdeaUUIDDefault with default headers values
func NewGetIdeaUUIDDefault(code int) *GetIdeaUUIDDefault {
	if code <= 0 {
		code = 500
	}

	return &GetIdeaUUIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get idea UUID default response
func (o *GetIdeaUUIDDefault) WithStatusCode(code int) *GetIdeaUUIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get idea UUID default response
func (o *GetIdeaUUIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get idea UUID default response
func (o *GetIdeaUUIDDefault) WithPayload(payload *models.Error) *GetIdeaUUIDDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get idea UUID default response
func (o *GetIdeaUUIDDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetIdeaUUIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
