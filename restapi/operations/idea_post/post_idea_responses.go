// Code generated by go-swagger; DO NOT EDIT.

package idea_post

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"devsmake/models"
)

// PostIdeaOKCode is the HTTP code returned for type PostIdeaOK
const PostIdeaOKCode int = 200

/*PostIdeaOK the idea post which was created

swagger:response postIdeaOK
*/
type PostIdeaOK struct {

	/*
	  In: Body
	*/
	Payload *models.Idea `json:"body,omitempty"`
}

// NewPostIdeaOK creates PostIdeaOK with default headers values
func NewPostIdeaOK() *PostIdeaOK {

	return &PostIdeaOK{}
}

// WithPayload adds the payload to the post idea o k response
func (o *PostIdeaOK) WithPayload(payload *models.Idea) *PostIdeaOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post idea o k response
func (o *PostIdeaOK) SetPayload(payload *models.Idea) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostIdeaOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PostIdeaDefault error

swagger:response postIdeaDefault
*/
type PostIdeaDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostIdeaDefault creates PostIdeaDefault with default headers values
func NewPostIdeaDefault(code int) *PostIdeaDefault {
	if code <= 0 {
		code = 500
	}

	return &PostIdeaDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post idea default response
func (o *PostIdeaDefault) WithStatusCode(code int) *PostIdeaDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post idea default response
func (o *PostIdeaDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the post idea default response
func (o *PostIdeaDefault) WithPayload(payload *models.Error) *PostIdeaDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post idea default response
func (o *PostIdeaDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostIdeaDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
