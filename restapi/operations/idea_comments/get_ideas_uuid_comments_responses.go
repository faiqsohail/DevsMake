// Code generated by go-swagger; DO NOT EDIT.

package idea_comments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"devsmake/models"
)

// GetIdeasUUIDCommentsOKCode is the HTTP code returned for type GetIdeasUUIDCommentsOK
const GetIdeasUUIDCommentsOKCode int = 200

/*GetIdeasUUIDCommentsOK the comments for the idea post fetched

swagger:response getIdeasUuidCommentsOK
*/
type GetIdeasUUIDCommentsOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Comment `json:"body,omitempty"`
}

// NewGetIdeasUUIDCommentsOK creates GetIdeasUUIDCommentsOK with default headers values
func NewGetIdeasUUIDCommentsOK() *GetIdeasUUIDCommentsOK {

	return &GetIdeasUUIDCommentsOK{}
}

// WithPayload adds the payload to the get ideas Uuid comments o k response
func (o *GetIdeasUUIDCommentsOK) WithPayload(payload []*models.Comment) *GetIdeasUUIDCommentsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get ideas Uuid comments o k response
func (o *GetIdeasUUIDCommentsOK) SetPayload(payload []*models.Comment) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetIdeasUUIDCommentsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Comment, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*GetIdeasUUIDCommentsDefault error

swagger:response getIdeasUuidCommentsDefault
*/
type GetIdeasUUIDCommentsDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetIdeasUUIDCommentsDefault creates GetIdeasUUIDCommentsDefault with default headers values
func NewGetIdeasUUIDCommentsDefault(code int) *GetIdeasUUIDCommentsDefault {
	if code <= 0 {
		code = 500
	}

	return &GetIdeasUUIDCommentsDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get ideas UUID comments default response
func (o *GetIdeasUUIDCommentsDefault) WithStatusCode(code int) *GetIdeasUUIDCommentsDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get ideas UUID comments default response
func (o *GetIdeasUUIDCommentsDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get ideas UUID comments default response
func (o *GetIdeasUUIDCommentsDefault) WithPayload(payload *models.Error) *GetIdeasUUIDCommentsDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get ideas UUID comments default response
func (o *GetIdeasUUIDCommentsDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetIdeasUUIDCommentsDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
