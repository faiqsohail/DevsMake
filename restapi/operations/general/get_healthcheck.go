// Code generated by go-swagger; DO NOT EDIT.

package general

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"context"
	"net/http"

	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetHealthcheckHandlerFunc turns a function with the right signature into a get healthcheck handler
type GetHealthcheckHandlerFunc func(GetHealthcheckParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetHealthcheckHandlerFunc) Handle(params GetHealthcheckParams) middleware.Responder {
	return fn(params)
}

// GetHealthcheckHandler interface for that can handle valid get healthcheck params
type GetHealthcheckHandler interface {
	Handle(GetHealthcheckParams) middleware.Responder
}

// NewGetHealthcheck creates a new http.Handler for the get healthcheck operation
func NewGetHealthcheck(ctx *middleware.Context, handler GetHealthcheckHandler) *GetHealthcheck {
	return &GetHealthcheck{Context: ctx, Handler: handler}
}

/* GetHealthcheck swagger:route GET /healthcheck general getHealthcheck

system database health check

*/
type GetHealthcheck struct {
	Context *middleware.Context
	Handler GetHealthcheckHandler
}

func (o *GetHealthcheck) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetHealthcheckParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

// GetHealthcheckInternalServerErrorBody get healthcheck internal server error body
//
// swagger:model GetHealthcheckInternalServerErrorBody
type GetHealthcheckInternalServerErrorBody struct {

	// status
	// Example: unavailable
	Status string `json:"status,omitempty"`
}

// Validate validates this get healthcheck internal server error body
func (o *GetHealthcheckInternalServerErrorBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get healthcheck internal server error body based on context it is used
func (o *GetHealthcheckInternalServerErrorBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetHealthcheckInternalServerErrorBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetHealthcheckInternalServerErrorBody) UnmarshalBinary(b []byte) error {
	var res GetHealthcheckInternalServerErrorBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

// GetHealthcheckOKBody get healthcheck o k body
//
// swagger:model GetHealthcheckOKBody
type GetHealthcheckOKBody struct {

	// status
	// Example: available
	Status string `json:"status,omitempty"`
}

// Validate validates this get healthcheck o k body
func (o *GetHealthcheckOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get healthcheck o k body based on context it is used
func (o *GetHealthcheckOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetHealthcheckOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetHealthcheckOKBody) UnmarshalBinary(b []byte) error {
	var res GetHealthcheckOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
