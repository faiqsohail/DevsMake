// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "https",
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Bringing together users and developers to create amazing projects.",
    "title": "DevsMake",
    "license": {
      "name": "GNU Affero General Public License v3.0",
      "url": "https://www.gnu.org/licenses/agpl-3.0.en.html"
    },
    "version": "1.0.0"
  },
  "host": "devsmake.com",
  "basePath": "/api/v1",
  "paths": {
    "/auth/callback": {
      "get": {
        "security": [],
        "tags": [
          "auth"
        ],
        "summary": "return access_token",
        "responses": {
          "200": {
            "description": "login",
            "schema": {
              "properties": {
                "access_token": {
                  "type": "string",
                  "format": "string"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/auth/login": {
      "get": {
        "security": [],
        "tags": [
          "auth"
        ],
        "summary": "login through github oauth2",
        "responses": {
          "200": {
            "description": "login",
            "schema": {
              "properties": {
                "access_token": {
                  "type": "string",
                  "format": "string"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/healthcheck": {
      "get": {
        "security": [],
        "tags": [
          "general"
        ],
        "summary": "system database health check",
        "responses": {
          "200": {
            "description": "database available",
            "schema": {
              "properties": {
                "status": {
                  "type": "string",
                  "format": "string",
                  "enum": [
                    "available"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "database unavailable",
            "schema": {
              "properties": {
                "status": {
                  "type": "string",
                  "format": "string",
                  "enum": [
                    "unavailable"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/ideas": {
      "get": {
        "security": [],
        "tags": [
          "idea post"
        ],
        "summary": "gets list of all recent ideas posted",
        "parameters": [
          {
            "type": "string",
            "description": "A optional search query",
            "name": "query",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "The maximum number of posts to fetch",
            "name": "limit",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "description": "The number of posts to skip before starting to collect the result set.",
            "name": "offset",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "ideas array",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Idea"
              }
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "idea post"
        ],
        "summary": "create an idea post",
        "parameters": [
          {
            "name": "idea",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Idea"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the idea post which was created",
            "schema": {
              "$ref": "#/definitions/Idea"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/ideas/{uuid}": {
      "get": {
        "security": [],
        "tags": [
          "idea post"
        ],
        "summary": "gets an idea by uuid",
        "parameters": [
          {
            "type": "string",
            "description": "idea post uuid",
            "name": "uuid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "the idea post fetched",
            "schema": {
              "$ref": "#/definitions/Idea"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/ideas/{uuid}/comments": {
      "get": {
        "security": [],
        "tags": [
          "idea comments"
        ],
        "summary": "gets all comments for a idea post",
        "parameters": [
          {
            "type": "string",
            "description": "idea post uuid",
            "name": "uuid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "the comments for the idea post fetched",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Comment"
              }
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "idea comments"
        ],
        "summary": "creates a comment for the idea post",
        "parameters": [
          {
            "type": "string",
            "description": "idea post uuid",
            "name": "uuid",
            "in": "path",
            "required": true
          },
          {
            "name": "comment",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Comment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the comment post which was created",
            "schema": {
              "$ref": "#/definitions/Comment"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/ideas/{uuid}/rate": {
      "put": {
        "tags": [
          "idea post"
        ],
        "summary": "rate an idea post",
        "parameters": [
          {
            "type": "string",
            "description": "idea post uuid",
            "name": "uuid",
            "in": "path",
            "required": true
          },
          {
            "name": "rating",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "rating"
              ],
              "properties": {
                "rating": {
                  "type": "string",
                  "enum": [
                    "like",
                    "dislike"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the idea post which was rated",
            "schema": {
              "$ref": "#/definitions/Idea"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/ideas/{uuid}/submissions": {
      "get": {
        "tags": [
          "idea submissions"
        ],
        "summary": "gets all submissions for a idea post",
        "parameters": [
          {
            "type": "string",
            "description": "idea post uuid",
            "name": "uuid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "the submissions for the idea post fetched",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Submission"
              }
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "idea submissions"
        ],
        "summary": "creates a submission for the idea post",
        "parameters": [
          {
            "type": "string",
            "description": "idea post uuid",
            "name": "uuid",
            "in": "path",
            "required": true
          },
          {
            "name": "submision",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Submission"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the submission post which was created",
            "schema": {
              "$ref": "#/definitions/Submission"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/ideas/{uuid}/submissions/rate": {
      "put": {
        "tags": [
          "idea submissions"
        ],
        "summary": "rate an idea post submission",
        "parameters": [
          {
            "type": "string",
            "description": "idea post uuid",
            "name": "uuid",
            "in": "path",
            "required": true
          },
          {
            "name": "rating",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "rating"
              ],
              "properties": {
                "rating": {
                  "type": "integer",
                  "example": 10
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the subbmision post which was rated",
            "schema": {
              "$ref": "#/definitions/Submission"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/profile": {
      "get": {
        "tags": [
          "profile"
        ],
        "summary": "profile information and statistics for the current user",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/Profile"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/profile/{id}": {
      "get": {
        "security": [],
        "tags": [
          "profile"
        ],
        "summary": "profile information and statistics for the specified user id",
        "parameters": [
          {
            "type": "string",
            "description": "identifier",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/Profile"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/profiles": {
      "get": {
        "security": [],
        "tags": [
          "profile"
        ],
        "summary": "fetches all profiles sorting by criteria",
        "parameters": [
          {
            "enum": [
              "points",
              "submissions",
              "likes"
            ],
            "type": "string",
            "default": "points",
            "description": "Sort profiles fetched based on a criteria",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "The maximum number of profiles to fetch",
            "name": "limit",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "description": "The number of profiles to skip before starting to collect the result set.",
            "name": "offset",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/Profile"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Comment": {
      "type": "object",
      "required": [
        "comment"
      ],
      "properties": {
        "author_id": {
          "type": "integer",
          "format": "int64"
        },
        "comment": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "uuid": {
          "type": "string"
        }
      }
    },
    "Idea": {
      "type": "object",
      "required": [
        "title",
        "description"
      ],
      "properties": {
        "author_id": {
          "type": "integer",
          "format": "int64"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "dislikes": {
          "type": "integer"
        },
        "likes": {
          "type": "integer"
        },
        "submissions": {
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      }
    },
    "Profile": {
      "type": "object",
      "properties": {
        "avatar_url": {
          "type": "string"
        },
        "identifier": {
          "type": "integer",
          "format": "int64"
        },
        "points": {
          "type": "integer"
        },
        "total_comments": {
          "type": "integer"
        },
        "total_posts": {
          "type": "integer"
        },
        "total_ratings": {
          "type": "integer"
        },
        "total_submissions": {
          "type": "integer"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "Submission": {
      "type": "object",
      "required": [
        "comment"
      ],
      "properties": {
        "author_id": {
          "type": "integer",
          "format": "int64"
        },
        "comment": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "rating": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      }
    },
    "error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "fields": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "principal": {
      "type": "string"
    }
  },
  "securityDefinitions": {
    "github_auth": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://github.com/login/oauth/authorize",
      "tokenUrl": "https://github.com/login/oauth/access_token",
      "scopes": {
        "user": "User scope"
      }
    }
  },
  "security": [
    {
      "github_auth": [
        "user"
      ]
    }
  ],
  "tags": [
    {
      "description": "General system endpoints",
      "name": "general"
    },
    {
      "description": "Authentication information",
      "name": "auth"
    },
    {
      "description": "Profile information",
      "name": "profile"
    },
    {
      "description": "Idea post",
      "name": "idea post"
    },
    {
      "description": "Idea post comments",
      "name": "idea comments"
    },
    {
      "description": "Idea post submissions",
      "name": "idea submissions"
    }
  ],
  "externalDocs": {
    "description": "Find out more about DevsMake",
    "url": "https://devsmake.com"
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "https",
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Bringing together users and developers to create amazing projects.",
    "title": "DevsMake",
    "license": {
      "name": "GNU Affero General Public License v3.0",
      "url": "https://www.gnu.org/licenses/agpl-3.0.en.html"
    },
    "version": "1.0.0"
  },
  "host": "devsmake.com",
  "basePath": "/api/v1",
  "paths": {
    "/auth/callback": {
      "get": {
        "security": [],
        "tags": [
          "auth"
        ],
        "summary": "return access_token",
        "responses": {
          "200": {
            "description": "login",
            "schema": {
              "properties": {
                "access_token": {
                  "type": "string",
                  "format": "string"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/auth/login": {
      "get": {
        "security": [],
        "tags": [
          "auth"
        ],
        "summary": "login through github oauth2",
        "responses": {
          "200": {
            "description": "login",
            "schema": {
              "properties": {
                "access_token": {
                  "type": "string",
                  "format": "string"
                }
              }
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/healthcheck": {
      "get": {
        "security": [],
        "tags": [
          "general"
        ],
        "summary": "system database health check",
        "responses": {
          "200": {
            "description": "database available",
            "schema": {
              "properties": {
                "status": {
                  "type": "string",
                  "format": "string",
                  "enum": [
                    "available"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "database unavailable",
            "schema": {
              "properties": {
                "status": {
                  "type": "string",
                  "format": "string",
                  "enum": [
                    "unavailable"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/ideas": {
      "get": {
        "security": [],
        "tags": [
          "idea post"
        ],
        "summary": "gets list of all recent ideas posted",
        "parameters": [
          {
            "type": "string",
            "description": "A optional search query",
            "name": "query",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "The maximum number of posts to fetch",
            "name": "limit",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "description": "The number of posts to skip before starting to collect the result set.",
            "name": "offset",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "ideas array",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Idea"
              }
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "idea post"
        ],
        "summary": "create an idea post",
        "parameters": [
          {
            "name": "idea",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Idea"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the idea post which was created",
            "schema": {
              "$ref": "#/definitions/Idea"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/ideas/{uuid}": {
      "get": {
        "security": [],
        "tags": [
          "idea post"
        ],
        "summary": "gets an idea by uuid",
        "parameters": [
          {
            "type": "string",
            "description": "idea post uuid",
            "name": "uuid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "the idea post fetched",
            "schema": {
              "$ref": "#/definitions/Idea"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/ideas/{uuid}/comments": {
      "get": {
        "security": [],
        "tags": [
          "idea comments"
        ],
        "summary": "gets all comments for a idea post",
        "parameters": [
          {
            "type": "string",
            "description": "idea post uuid",
            "name": "uuid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "the comments for the idea post fetched",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Comment"
              }
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "idea comments"
        ],
        "summary": "creates a comment for the idea post",
        "parameters": [
          {
            "type": "string",
            "description": "idea post uuid",
            "name": "uuid",
            "in": "path",
            "required": true
          },
          {
            "name": "comment",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Comment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the comment post which was created",
            "schema": {
              "$ref": "#/definitions/Comment"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/ideas/{uuid}/rate": {
      "put": {
        "tags": [
          "idea post"
        ],
        "summary": "rate an idea post",
        "parameters": [
          {
            "type": "string",
            "description": "idea post uuid",
            "name": "uuid",
            "in": "path",
            "required": true
          },
          {
            "name": "rating",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "rating"
              ],
              "properties": {
                "rating": {
                  "type": "string",
                  "enum": [
                    "like",
                    "dislike"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the idea post which was rated",
            "schema": {
              "$ref": "#/definitions/Idea"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/ideas/{uuid}/submissions": {
      "get": {
        "tags": [
          "idea submissions"
        ],
        "summary": "gets all submissions for a idea post",
        "parameters": [
          {
            "type": "string",
            "description": "idea post uuid",
            "name": "uuid",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "the submissions for the idea post fetched",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Submission"
              }
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "tags": [
          "idea submissions"
        ],
        "summary": "creates a submission for the idea post",
        "parameters": [
          {
            "type": "string",
            "description": "idea post uuid",
            "name": "uuid",
            "in": "path",
            "required": true
          },
          {
            "name": "submision",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Submission"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the submission post which was created",
            "schema": {
              "$ref": "#/definitions/Submission"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/ideas/{uuid}/submissions/rate": {
      "put": {
        "tags": [
          "idea submissions"
        ],
        "summary": "rate an idea post submission",
        "parameters": [
          {
            "type": "string",
            "description": "idea post uuid",
            "name": "uuid",
            "in": "path",
            "required": true
          },
          {
            "name": "rating",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "rating"
              ],
              "properties": {
                "rating": {
                  "type": "integer",
                  "example": 10
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "the subbmision post which was rated",
            "schema": {
              "$ref": "#/definitions/Submission"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/profile": {
      "get": {
        "tags": [
          "profile"
        ],
        "summary": "profile information and statistics for the current user",
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/Profile"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/profile/{id}": {
      "get": {
        "security": [],
        "tags": [
          "profile"
        ],
        "summary": "profile information and statistics for the specified user id",
        "parameters": [
          {
            "type": "string",
            "description": "identifier",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/Profile"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/profiles": {
      "get": {
        "security": [],
        "tags": [
          "profile"
        ],
        "summary": "fetches all profiles sorting by criteria",
        "parameters": [
          {
            "enum": [
              "points",
              "submissions",
              "likes"
            ],
            "type": "string",
            "default": "points",
            "description": "Sort profiles fetched based on a criteria",
            "name": "sort",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "The maximum number of profiles to fetch",
            "name": "limit",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "description": "The number of profiles to skip before starting to collect the result set.",
            "name": "offset",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/Profile"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Comment": {
      "type": "object",
      "required": [
        "comment"
      ],
      "properties": {
        "author_id": {
          "type": "integer",
          "format": "int64"
        },
        "comment": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "uuid": {
          "type": "string"
        }
      }
    },
    "Idea": {
      "type": "object",
      "required": [
        "title",
        "description"
      ],
      "properties": {
        "author_id": {
          "type": "integer",
          "format": "int64"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "dislikes": {
          "type": "integer"
        },
        "likes": {
          "type": "integer"
        },
        "submissions": {
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      }
    },
    "Profile": {
      "type": "object",
      "properties": {
        "avatar_url": {
          "type": "string"
        },
        "identifier": {
          "type": "integer",
          "format": "int64"
        },
        "points": {
          "type": "integer"
        },
        "total_comments": {
          "type": "integer"
        },
        "total_posts": {
          "type": "integer"
        },
        "total_ratings": {
          "type": "integer"
        },
        "total_submissions": {
          "type": "integer"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "Submission": {
      "type": "object",
      "required": [
        "comment"
      ],
      "properties": {
        "author_id": {
          "type": "integer",
          "format": "int64"
        },
        "comment": {
          "type": "string"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "rating": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        }
      }
    },
    "error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "fields": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "principal": {
      "type": "string"
    }
  },
  "securityDefinitions": {
    "github_auth": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://github.com/login/oauth/authorize",
      "tokenUrl": "https://github.com/login/oauth/access_token",
      "scopes": {
        "user": "User scope"
      }
    }
  },
  "security": [
    {
      "github_auth": [
        "user"
      ]
    }
  ],
  "tags": [
    {
      "description": "General system endpoints",
      "name": "general"
    },
    {
      "description": "Authentication information",
      "name": "auth"
    },
    {
      "description": "Profile information",
      "name": "profile"
    },
    {
      "description": "Idea post",
      "name": "idea post"
    },
    {
      "description": "Idea post comments",
      "name": "idea comments"
    },
    {
      "description": "Idea post submissions",
      "name": "idea submissions"
    }
  ],
  "externalDocs": {
    "description": "Find out more about DevsMake",
    "url": "https://devsmake.com"
  }
}`))
}
