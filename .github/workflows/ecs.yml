on:
  push:
    branches: [ master ]
env:
  AWS_LIGHTSAIL_SERVICE_NAME: devsmake-service
name: webapp to ECS

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      
    - name: Install Utilities
      run: |
        sudo apt-get update
        sudo apt-get install -y jq unzip
    
    - name: Install AWS Client
      run: |
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install || true
        aws --version
        curl "https://s3.us-west-2.amazonaws.com/lightsailctl/latest/linux-amd64/lightsailctl" -o "lightsailctl"
        sudo mv "lightsailctl" "/usr/local/bin/lightsailctl"
        sudo chmod +x /usr/local/bin/lightsailctl
        
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ca-central-1
    
    - name: Build Docker Image
      run: docker build -t ${{ env.AWS_LIGHTSAIL_SERVICE_NAME }}:release .
      
    - name: Push and Deploy
      run: |
        service_name=${{ env.AWS_LIGHTSAIL_SERVICE_NAME }}
        aws lightsail push-container-image \
          --region ca-central-1 \
          --service-name ${service_name} \
          --label webapp \
          --image ${service_name}:release
        aws lightsail get-container-images --service-name ${service_name} | jq --raw-output ".containerImages[0].image" > image.txt
        aws lightsail get-container-service-deployments --service-name ${service_name} | jq -r '.deployments[] | select(.state=="ACTIVE") | del(.version, .state, .createdAt)' > container.template.json
        jq --arg image $(cat image.txt) '.containers.webapp.image = $image' container.template.json > container.json
        aws lightsail create-container-service-deployment --service-name ${service_name} --cli-input-json "$(cat < container.json )" >/dev/null 2>&1
